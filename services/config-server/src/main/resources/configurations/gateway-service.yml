server:
  port: 8222
spring:
  security:
    csrf:
      enabled: false
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "https://localhost:4200"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
      discovery:
        locator:
          enabled: true
      routes:
        - id: organization-service
          uri: lb:http://ORGANIZATION-SERVICE
          predicates:
            - Path=/api/v1/organizations/**
          filters:
            - RemoveRequestHeader=Cookie
            - AuthorizationHeaderFilter
        - id: member-service
          uri: lb:http://MEMBER-SERVICE
          predicates:
            - Path=/api/v1/members/**
        - id: membership-service
          uri: lb:http://MEMBER-SERVICE
          predicates:
            - Path=/api/v1/memberships/**
        - id: membership-type-service
          uri: lb:http://MEMBER-SERVICE
          predicates:
            - Path=/api/v1/membership-types/**
        - id: membership-status-service
          uri: lb:http://MEMBER-SERVICE
          predicates:
            - Path=/api/v1/membership-statuses/**
        - id: authentication-service
          uri: lb:http://MEMBER-SERVICE
          predicates:
            - Path=/api/v1/auth/**
        - id: menu-service
          uri: lb:http://MEMBER-SERVICE
          predicates:
            - Path=/api/v1/menus/**
        - id: role-service
          uri: lb:http://MEMBER-SERVICE
          predicates:
            - Path=/api/v1/roles/**
        - id: event-service
          uri: lb:http://EVENT-SERVICE
          predicates:
            - Path=/api/v1/event/**
        - id: event-confirmation-service
          uri: lb:http://EVENT-SERVICE
          predicates:
            - Path=/api/v1/event-confirmation/**

token:
  secret: TaK+HaV^uvCHEFsEVfypW#7g9^k*Z8$V


#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/  # Eureka server URL
#    registerWithEureka: true  # Register this service in Eureka
#    fetchRegistry: true  # Fetch service registry from Eureka
#  instance:
#    preferIpAddress: true  #